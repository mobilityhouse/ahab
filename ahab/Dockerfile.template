# Rust image
FROM arm32v7/rust:1.41.1 as rust
ENV DEBIAN_FRONTEND=noninteractive


# Dependencies
FROM rust as dependencies
ARG DEVELOPMENT
ENV DEVELOPMENT=$DEVELOPMENT

WORKDIR /build

# Create new fake project ($USER is needed by `cargo new`)
RUN USER=root cargo new app

WORKDIR /build/app

# Copy real app dependencies
COPY ahab/Cargo.* ./

# Build fake project with real dependencies
RUN cargo build $([ "$DEVELOPMENT" != "true" ] && echo '--release')

# Remove the fake app build artifacts
RUN rm -rf target/*/ahab* target/*/deps/ahab-*


# Builder
FROM rust as builder
ARG DEVELOPMENT
ENV DEVELOPMENT=$DEVELOPMENT

# We do not want to download deps, update registry, ... again
COPY --from=dependencies /usr/local/cargo/ /usr/local/cargo/

WORKDIR /build/app

# Copy everything, not just source code
COPY ahab/ .

# Update already built deps from dependencies image
COPY --from=dependencies /build/app/target target

# Build real app
RUN cargo build $([ "$DEVELOPMENT" != "true" ] && echo '--release')


# Final image
FROM balenalib/%%BALENA_MACHINE_NAME%%-debian

WORKDIR /app

# Copy binary from builder image
COPY --from=builder /build/app/target/*/ahab .

# Launch application
CMD ["./ahab"]
